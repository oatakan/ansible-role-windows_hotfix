---

- name: unzip if needed
  raw: |
    $tmp_dir = "{{ hotfix_download_location }}"
    $zip_file = "{{ hotfix_download_location }}\{{ hotfix_filename }}"
    $7zip_exe = "{{ hotfix_download_location }}\7za.exe"
    $7zip_download_url = "{{ seven_zip_download_url }}"

    try {
        Add-Type -AssemblyName System.IO.Compression.FileSystem > $null
        $legacy = $false
    } catch {
        $legacy = $true
    }

    if ($legacy) {
        try {
            $shell = New-Object -ComObject Shell.Application
            $zip_src = $shell.NameSpace($zip_file)
            $zip_dest = $shell.NameSpace($tmp_dir)
            $zip_dest.CopyHere($zip_src.Items(), 1044)
        } catch {
            if (Test-Path $7zip_exe) {
                & $7zip_exe x $zip_file "-o$tmp_dir"
            } else {
                {{ windows_ignore_cert_block if windows_ps_ignore_cert else windows_set_tls_block }}
                (New-Object -TypeName System.Net.WebClient).DownloadFile($7zip_download_url, $7zip_exe)
                & $7zip_exe x $zip_file "-o$tmp_dir"
            }
        }
    } else {
        [System.IO.Compression.ZipFile]::ExtractToDirectory($zip_file, $tmp_dir)
    }
  changed_when: False
  check_mode: no
  when: hotfix_filename | regex_search("^.*\.zip$", ignorecase=True) or hotfix_filename | regex_search("^.*zip\.exe$", ignorecase=True)

- name: delete scheduled task if it exists (hotfix)
  raw: 'SCHTASKS /Delete /TN hotfix_install /f'
  args:
    executable: cmd.exe
  changed_when: False
  check_mode: no
  ignore_errors: yes

- name: create a scheduled task to install hotfix
  raw: SCHTASKS /Create /SC MONTHLY /MO first /D SUN /TN hotfix_install /TR "{{ hotfix_download_location }}\{{ hotfix.file }} /quiet /restart"
  args:
    executable: cmd.exe
  changed_when: False
  check_mode: no

- name: run scheduled task (hotfix)
  raw: 'SCHTASKS /Run /TN hotfix_install'
  args:
    executable: cmd.exe
  changed_when: False
  check_mode: no

- name: pausing for system to reboot after hotfix
  pause:
    seconds: "{{ hotfix_install_wait_seconds | default(60) }}"

- name: delete scheduled task (hotfix)
  raw: 'SCHTASKS /Delete /TN hotfix_install /f'
  args:
    executable: cmd.exe
  changed_when: False
  check_mode: no
  ignore_errors: yes